{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/About.js","components/pages/NotFound.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContacts.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","alert","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showInfo","toggleInfo","deleteOnClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","bind","react_router_dom","to","marginRight","Contacts","contacts_Contact","About","NotFound","Header","_ref","defaultProps","branding","TextInputGroup","label","placeholder","onChange","error","onKeyPress","htmlFor","classnames","is-invalid","AddContacts","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","onChangeValue","defineProperty","target","_this$state2","layout_TextInputGroup","withRouter","EditContact","updateContact","match","params","put","App","context_Provider","createBrowserHistory","react_router","exact","path","render","layout_Header","contacts_Contacts","contacts_AddContacts","contacts_EditContact","About_About","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07962f37.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      alert(\"Added Successfully!\");\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      alert(\"Updated Successfully!!\");\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id ? action.payload : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = { showInfo: false };\r\n  toggleInfo = () => {\r\n    this.setState({ showInfo: !this.state.showInfo });\r\n  };\r\n  deleteOnClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  onClick={this.toggleInfo}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ float: \"right\", cursor: \"pointer\" }}\r\n                  onClick={this.deleteOnClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contacts/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      float: \"right\",\r\n                      cursor: \"pointer\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {this.state.showInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{email}</li>\r\n                  <li className=\"list-group-item\">{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport Contact from \"./Contact\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <div>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> Manager\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>About Contact Manager</h1>\r\n        <p>This is an app that can store and delete contacts</p>\r\n        <h4>version 1.0.0</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        <span className=\"text-danger\">404</span> NOT FOUND!\r\n      </h1>\r\n      <p>\r\n        The page you are looking for can't be found or this destination doesn't\r\n        exist!!\r\n      </p>\r\n      <h3>Peace!</h3>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = ({ children }) => {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            Contact Manager\r\n          </Link>\r\n          <ul className=\"navbar-nav mr-0\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" />\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contacts/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" />\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contacts/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" />\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  type,\r\n  onChange,\r\n  error,\r\n  onKeyPress\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control form-control-sm\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        onKeyPress={onKeyPress}\r\n      />\r\n      {error ? <div className=\"invalid-feedback\">{error}</div> : null}\r\n    </div>\r\n  );\r\n};\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass AddContacts extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: { name: \"\", email: \"\", phone: \"\" },\r\n    showInfo: false\r\n  };\r\n  toggleInfo = () => {\r\n    this.setState({ showInfo: !this.state.showInfo });\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone, errors } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name field is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email field is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone field is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n      errors\r\n    };\r\n    const res = await axios.post(\r\n      `https://jsonplaceholder.typicode.com/users`,\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  onChangeValue = e => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div\r\n                className=\"card-header\"\r\n                onClick={this.toggleInfo}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                Add Contact\r\n              </div>\r\n              {this.state.showInfo ? (\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      className=\"form-control form-control-sm\"\r\n                      name=\"name\"\r\n                      placeholder=\"insert name..\"\r\n                      value={name}\r\n                      onChange={this.onChangeValue}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      className=\"form-control form-control-sm\"\r\n                      name=\"email\"\r\n                      placeholder=\"insert email..\"\r\n                      value={email}\r\n                      onChange={this.onChangeValue}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      className=\"form-control form-control-sm\"\r\n                      name=\"phone\"\r\n                      placeholder=\"insert phone number..\"\r\n                      value={phone}\r\n                      onChange={this.onChangeValue}\r\n                      error={errors.phone}\r\n                    />\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-success btn-sm btn-block\"\r\n                    >\r\n                      Add contact\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(AddContacts);\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: { name: \"\", email: \"\", phone: \"\" }\r\n  };\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone, errors } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name field is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email field is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone field is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n      errors\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  onChangeValue = e => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div\r\n                className=\"card-header\"\r\n                onClick={this.toggleInfo}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <h3>Edit Contact</h3>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    className=\"form-control form-control-sm\"\r\n                    name=\"name\"\r\n                    placeholder=\"insert name..\"\r\n                    value={name}\r\n                    onChange={this.onChangeValue}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    className=\"form-control form-control-sm\"\r\n                    name=\"email\"\r\n                    placeholder=\"insert email..\"\r\n                    value={email}\r\n                    onChange={this.onChangeValue}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    className=\"form-control form-control-sm\"\r\n                    name=\"phone\"\r\n                    placeholder=\"insert phone number..\"\r\n                    value={phone}\r\n                    onChange={this.onChangeValue}\r\n                    error={errors.phone}\r\n                  />\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-success btn-sm btn-block\"\r\n                  >\r\n                    Update contact\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(EditContact);\r\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Header from \"./components/layout/Header\";\nimport AddContacts from \"./components/contacts/AddContacts\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport { Provider } from \"./context\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router history={createBrowserHistory()}>\n        <div className=\"App\">\n          <Switch>\n            <Route\n              exact={true}\n              path=\"/\"\n              render={() => (\n                <Header>\n                  <Contacts />\n                </Header>\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/contacts/add\"\n              render={() => (\n                <Header>\n                  <AddContacts />\n                </Header>\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/contacts/edit/:id\"\n              render={() => (\n                <Header>\n                  <EditContact />\n                </Header>\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/contacts/about\"\n              render={() => (\n                <Header>\n                  <About />\n                </Header>\n              )}\n            />\n            <Route\n              render={() => (\n                <Header>\n                  <NotFound />\n                </Header>\n              )}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}