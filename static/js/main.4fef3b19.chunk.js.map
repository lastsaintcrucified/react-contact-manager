{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/About.js","components/pages/NotFound.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContacts.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","alert","concat","toConsumableArray","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","email","phone","dispatch","setState","inherits","createClass","key","value","react_default","a","createElement","props","children","Component","Consumer","Contact","showInfo","toggleInfo","deleteOnClick","_this2","_this$props$contact","className","onClick","style","cursor","float","bind","Contacts","map","contacts_Contact","About","NotFound","Header","branding","react_router_dom","to","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","onKeyPress","htmlFor","classnames","is-invalid","AddContacts","errors","onSubmit","e","preventDefault","_this$state","uuid","history","push","onChangeValue","defineProperty","target","_this$state2","layout_TextInputGroup","App","context_Provider","react_router","createBrowserHistory","layout_Header","contacts_Contacts","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wQAEMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cAEH,OADAC,MAAM,uBACCP,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVE,OAAAR,OAAAS,EAAA,EAAAT,CAAsBH,EAAMK,aAExC,IAAK,QACH,OAAOK,MAAM,qCACf,QACE,OAAOV,IAIAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAP,OAAAW,MACEtB,MAAQ,CACNK,SAAU,CACR,CACEG,GAAI,EACJqB,KAAM,WACNC,MAAO,oBACPC,MAAO,gBAET,CACEvB,GAAI,EACJqB,KAAM,cACNC,MAAO,uBACPC,MAAO,gBAET,CACEvB,GAAI,EACJqB,KAAM,aACNC,MAAO,iBACPC,MAAO,iBAGXC,SAAU,SAAA/B,GAAM,OAAIe,EAAKiB,SAAS,SAAAjC,GAAK,OAAID,EAAQC,EAAOC,OAtB9De,EAAA,OAAAb,OAAA+B,EAAA,EAAA/B,CAAAU,EAAAC,GAAAX,OAAAgC,EAAA,EAAAhC,CAAAU,EAAA,EAAAuB,IAAA,SAAAC,MAAA,WAyBI,OACEC,EAAAC,EAAAC,cAAC5C,EAAQiB,SAAT,CAAkBwB,MAAOnB,KAAKlB,OAC3BkB,KAAKuB,MAAMC,cA3BpB7B,EAAA,CAA8B8B,aAiCjBC,EAAWhD,EAAQgD,SCRjBC,6MA9Cb7C,MAAQ,CAAE8C,UAAU,KACpBC,WAAa,WACX/B,EAAKiB,SAAS,CAAEa,UAAW9B,EAAKhB,MAAM8C,cAExCE,cAAgB,SAACxC,EAAIwB,GACnBA,EAAS,CAAE9B,KAAM,iBAAkBO,QAASD,6EAErC,IAAAyC,EAAA/B,KAAAgC,EAC4BhC,KAAKuB,MAAMlC,QAAtCC,EADD0C,EACC1C,GAAIqB,EADLqB,EACKrB,KAAMC,EADXoB,EACWpB,MAAOC,EADlBmB,EACkBnB,MACzB,OACEO,EAAAC,EAAAC,cAACI,EAAD,KACG,SAAAP,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEM,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uBACbb,EAAAC,EAAAC,cAAA,UACGX,EACDS,EAAAC,EAAAC,cAAA,KACEY,QAASH,EAAKF,WACdI,UAAU,mBACVE,MAAO,CAAEC,OAAQ,aAEnBhB,EAAAC,EAAAC,cAAA,KACEW,UAAU,eACVE,MAAO,CAAEE,MAAO,QAASD,OAAQ,WACjCF,QAASH,EAAKD,cAAcQ,KAAKP,EAAMzC,EAAIwB,MAG9CiB,EAAKjD,MAAM8C,SACVR,EAAAC,EAAAC,cAAA,MAAIW,UAAU,cACZb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,mBAAmBrB,GACjCQ,EAAAC,EAAAC,cAAA,MAAIW,UAAU,mBAAmBpB,IAEjC,eAlCIY,aCsBPc,mLApBX,OACEnB,EAAAC,EAAAC,cAACI,EAAD,KACG,SAAAP,GAAS,IACAhC,EAAagC,EAAbhC,SACR,OACEiC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIW,UAAU,kBACZb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,eAAhB,WADF,YAGC9C,EAASqD,IAAI,SAAAnD,GAAO,OACnB+B,EAAAC,EAAAC,cAACmB,EAAD,CAASvB,IAAK7B,EAAQC,GAAID,QAASA,gBAZ5BoC,aCFFiB,mLAEjB,OACEtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,8DACAF,EAAAC,EAAAC,cAAA,mCAN2BG,aCApB,SAASkB,IACtB,OACEvB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMW,UAAU,eAAhB,OADF,eAGAb,EAAAC,EAAAC,cAAA,4FAIAF,EAAAC,EAAAC,cAAA,iCCRAsB,EAAS,SAAArB,GAAS,IACdsB,EAAatB,EAAbsB,SACR,OACEzB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2DACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACbb,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAG,IAAId,UAAU,gBACpBY,GAEHzB,EAAAC,EAAAC,cAAA,MAAIW,UAAU,mBACZb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,YACZb,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAG,IAAId,UAAU,YACrBb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,gBADf,SAKFb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,YACZb,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAG,OAAOd,UAAU,YACxBb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,gBADf,QAKFb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,YACZb,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAG,SAASd,UAAU,YAC1Bb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,oBADf,cAWZW,EAAOI,aAAe,CACpBH,SAAU,UAOGD,iCCzCTK,EAAiB,SAAAC,GASjB,IARJC,EAQID,EARJC,MACAxC,EAOIuC,EAPJvC,KACAyC,EAMIF,EANJE,YACAjC,EAKI+B,EALJ/B,MACAnC,EAIIkE,EAJJlE,KACAqE,EAGIH,EAHJG,SACAC,EAEIJ,EAFJI,MACAC,EACIL,EADJK,WAEA,OACEnC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cACbb,EAAAC,EAAAC,cAAA,SAAOkC,QAAS7C,GAAOwC,GACvB/B,EAAAC,EAAAC,cAAA,SACEtC,KAAMA,EACNiD,UAAWwB,IAAW,+BAAgC,CACpDC,aAAcJ,IAEhB3C,KAAMA,EACNyC,YAAaA,EACbjC,MAAOA,EACPkC,SAAUA,EACVE,WAAYA,IAEbD,EAAQlC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oBAAoBqB,GAAe,OAWjEL,EAAeD,aAAe,CAC5BhE,KAAM,QAGOiE,yBCuEAU,6MA5Gb7E,MAAQ,CACN6B,KAAM,GACNC,MAAO,GACPC,MAAO,GACP+C,OAAQ,CAAEjD,KAAM,GAAIC,MAAO,GAAIC,MAAO,IACtCe,UAAU,KAEZC,WAAa,WACX/B,EAAKiB,SAAS,CAAEa,UAAW9B,EAAKhB,MAAM8C,cAExCiC,SAAW,SAAC/C,EAAUgD,GACpBA,EAAEC,iBADwB,IAAAC,EAEalE,EAAKhB,MAApC6B,EAFkBqD,EAElBrD,KAAMC,EAFYoD,EAEZpD,MAAOC,EAFKmD,EAELnD,MAAO+C,EAFFI,EAEEJ,OACf,KAATjD,EAKU,KAAVC,EAKU,KAAVC,GAYJC,EAAS,CAAE9B,KAAM,cAAeO,QAPb,CACjBD,GAAI2E,MACJtD,OACAC,QACAC,QACA+C,YAIF9D,EAAKiB,SAAS,CACZJ,KAAM,GACNC,MAAO,GACPC,MAAO,GACP+C,OAAQ,KAEV9D,EAAKyB,MAAM2C,QAAQC,KAAK,MAnBtBrE,EAAKiB,SAAS,CAAE6C,OAAQ,CAAE/C,MAAO,6BALjCf,EAAKiB,SAAS,CAAE6C,OAAQ,CAAEhD,MAAO,6BALjCd,EAAKiB,SAAS,CAAE6C,OAAQ,CAAEjD,KAAM,+BA+BpCyD,cAAgB,SAAAN,GAAC,OAAIhE,EAAKiB,SAAL9B,OAAAoF,EAAA,EAAApF,CAAA,GAAiB6E,EAAEQ,OAAO3D,KAAOmD,EAAEQ,OAAOnD,iFACtD,IAAAY,EAAA/B,KAAAuE,EACgCvE,KAAKlB,MAApC6B,EADD4D,EACC5D,KAAMC,EADP2D,EACO3D,MAAOC,EADd0D,EACc1D,MAAO+C,EADrBW,EACqBX,OAC5B,OACExC,EAAAC,EAAAC,cAACI,EAAD,KACG,SAAAP,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEM,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACbb,EAAAC,EAAAC,cAAA,OACEW,UAAU,cACVC,QAASH,EAAKF,WACdM,MAAO,CAAEC,OAAQ,YAHnB,eAOCL,EAAKjD,MAAM8C,SACVR,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACbb,EAAAC,EAAAC,cAAA,QAAMuC,SAAU9B,EAAK8B,SAASvB,KAAKP,EAAMjB,IACvCM,EAAAC,EAAAC,cAACkD,EAAD,CACErB,MAAM,OACNlB,UAAU,+BACVtB,KAAK,OACLyC,YAAY,gBACZjC,MAAOR,EACP0C,SAAUtB,EAAKqC,cACfd,MAAOM,EAAOjD,OAEhBS,EAAAC,EAAAC,cAACkD,EAAD,CACErB,MAAM,QACNnE,KAAK,QACLiD,UAAU,+BACVtB,KAAK,QACLyC,YAAY,iBACZjC,MAAOP,EACPyC,SAAUtB,EAAKqC,cACfd,MAAOM,EAAOhD,QAEhBQ,EAAAC,EAAAC,cAACkD,EAAD,CACErB,MAAM,QACNlB,UAAU,+BACVtB,KAAK,QACLyC,YAAY,wBACZjC,MAAON,EACPwC,SAAUtB,EAAKqC,cACfd,MAAOM,EAAO/C,QAEhBO,EAAAC,EAAAC,cAAA,UACEtC,KAAK,SACLiD,UAAU,oCAFZ,iBAQF,eArGQR,mBC2BXgD,MArBf,WACE,OACErD,EAAAC,EAAAC,cAACoD,EAAD,KACEtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAQT,QAASU,eACfxD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,OACbb,EAAAC,EAAAC,cAACuD,EAAD,CAAQhC,SAAS,oBACjBzB,EAAAC,EAAAC,cAACwD,EAAD,MACA1D,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACbb,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACEvD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAOI,MAAM,OAAOC,KAAK,IAAIC,UAAW1C,IACxCnB,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAOI,MAAM,OAAOC,KAAK,OAAOC,UAAWtB,IAC3CvC,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAOI,MAAM,OAAOC,KAAK,SAASC,UAAWvC,IAC7CtB,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAOM,UAAWtC,UCXZuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpE,EAAAC,EAAAC,cAACmE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4fef3b19.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      alert(\"Added Successfully!\");\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"ERROR\":\r\n      return alert(\"Need all the fields to be filled!\");\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        name: \"John Doe\",\r\n        email: \"johnDoe@gmail.com\",\r\n        phone: \"222-222-3333\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Sofia Karen\",\r\n        email: \"sofiaKaren@gmail.com\",\r\n        phone: \"222-222-3444\"\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Mandy Fury\",\r\n        email: \"fury@gmail.com\",\r\n        phone: \"222-222-3555\"\r\n      }\r\n    ],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contact extends Component {\r\n  state = { showInfo: false };\r\n  toggleInfo = () => {\r\n    this.setState({ showInfo: !this.state.showInfo });\r\n  };\r\n  deleteOnClick = (id, dispatch) => {\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  onClick={this.toggleInfo}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ float: \"right\", cursor: \"pointer\" }}\r\n                  onClick={this.deleteOnClick.bind(this, id, dispatch)}\r\n                />\r\n              </h4>\r\n              {this.state.showInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{email}</li>\r\n                  <li className=\"list-group-item\">{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport Contact from \"./Contact\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <div>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> Manager\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>About Contact Manager</h1>\r\n        <p>This is an app that can store and delete contacts</p>\r\n        <h4>version 1.0.0</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        <span className=\"text-danger\">404</span> NOT FOUND!\r\n      </h1>\r\n      <p>\r\n        The page you are looking for can't be found or this destination doesn't\r\n        exist!!\r\n      </p>\r\n      <h3>Peace!</h3>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <ul className=\"navbar-nav mr-0\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              <i className=\"fas fa-home\" />\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/add\" className=\"nav-link\">\r\n              <i className=\"fas fa-plus\" />\r\n              Add\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fas fa-question\" />\r\n              About\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  type,\r\n  onChange,\r\n  error,\r\n  onKeyPress\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control form-control-sm\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        onKeyPress={onKeyPress}\r\n      />\r\n      {error ? <div className=\"invalid-feedback\">{error}</div> : null}\r\n    </div>\r\n  );\r\n};\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  error: PropTypes.string.isRequired\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport uuid from \"uuid\";\r\n\r\nclass AddContacts extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: { name: \"\", email: \"\", phone: \"\" },\r\n    showInfo: false\r\n  };\r\n  toggleInfo = () => {\r\n    this.setState({ showInfo: !this.state.showInfo });\r\n  };\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone, errors } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name field is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email field is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone field is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      id: uuid(),\r\n      name,\r\n      email,\r\n      phone,\r\n      errors\r\n    };\r\n    dispatch({ type: \"ADD_CONTACT\", payload: newContact });\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  onChangeValue = e => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div\r\n                className=\"card-header\"\r\n                onClick={this.toggleInfo}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                Add Contact\r\n              </div>\r\n              {this.state.showInfo ? (\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      className=\"form-control form-control-sm\"\r\n                      name=\"name\"\r\n                      placeholder=\"insert name..\"\r\n                      value={name}\r\n                      onChange={this.onChangeValue}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      className=\"form-control form-control-sm\"\r\n                      name=\"email\"\r\n                      placeholder=\"insert email..\"\r\n                      value={email}\r\n                      onChange={this.onChangeValue}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      className=\"form-control form-control-sm\"\r\n                      name=\"phone\"\r\n                      placeholder=\"insert phone number..\"\r\n                      value={phone}\r\n                      onChange={this.onChangeValue}\r\n                      error={errors.phone}\r\n                    />\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-success btn-sm btn-block\"\r\n                    >\r\n                      Add contact\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContacts;\r\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Header from \"./components/layout/Header\";\nimport AddContacts from \"./components/contacts/AddContacts\";\nimport { Provider } from \"./context\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router history={createBrowserHistory()}>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <Contacts />\n          <div className=\"container\">\n            <Switch>\n              <Route exact=\"true\" path=\"/\" component={Contacts} />\n              <Route exact=\"true\" path=\"/add\" component={AddContacts} />\n              <Route exact=\"true\" path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}